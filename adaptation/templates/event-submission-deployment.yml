apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.eventsubmissionservice.name }}
spec:
  replicas: {{ .Values.eventsubmissionservice.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.eventsubmissionservice.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.eventsubmissionservice.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.prometheus.metricspath }}
        prometheus.io/port: "{{ .Values.prometheus.metricsport }}"
    spec:
      volumes:
        - name: {{ .Values.transactionstore.shareName }}
          persistentVolumeClaim:
            claimName: pvc-event-submission
      containers:
      - name: event-submission-service
        volumeMounts:
          - name: {{ .Values.transactionstore.shareName }}
            mountPath: {{ .Values.volumemountpath.transactions }}
        image: {{ .Values.imagestore.eventsubmission.registry}}{{ .Values.imagestore.eventsubmission.repository }}:{{ .Values.imagestore.eventsubmission.tag }}
        ports:
        - containerPort: {{ .Values.prometheus.metricsport }}
        env:
        - name: TRANSACTION_STORE_ROOT_PATH
          value: {{ .Values.volumemountpath.transactions }}
        - name: METRICS_PORT
          value: "{{ .Values.prometheus.metricsport }}"
        - name: TRANSACTION_EVENT_QUEUE_HOSTNAME
          value: {{ .Values.queue.transactionevent.hostname}}
        - name: TRANSACTION_EVENT_QUEUE_PORT
          value: {{ .Values.queue.transactionevent.port }}
        {{- if .Values.queue.messagebrokersecret }}
        - name: MESSAGE_BROKER_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.queue.messagebrokersecret }}
              key: username
        - name: MESSAGE_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.queue.messagebrokersecret }}
              key: password
        {{- end }}               
      imagePullSecrets:
        - name: adaptation-registry-credential