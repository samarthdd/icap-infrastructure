apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ncfs-policy-update-service.fullname" . }}
  labels:
    app: {{ template "ncfs-policy-update-service.name" . }}
    chart: {{ template "ncfs-policy-update-service.chart" . }}
    draft: {{ .Values.draft | default "draft-app" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ncfspolicyupdateservice.replicas }}
  selector:
    matchLabels:
      app: {{ template "ncfs-policy-update-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "ncfs-policy-update-service.name" . }}  
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.prometheus.metricspath }}
        prometheus.io/port: "{{ .Values.prometheus.metricsport }}"
    spec:
      serviceAccountName: ncfs-policy-update-service-account
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.imagestore.ncfspolicyupdateservice.registry}}{{ .Values.imagestore.ncfspolicyupdateservice.repository }}:{{ .Values.imagestore.ncfspolicyupdateservice.tag }}
        ports:
        - containerPort: {{ .Values.ncfspolicyupdateservice.service.port }}
        - containerPort: {{ .Values.prometheus.metricsport }}
        env:
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: LISTENING_PORT
          value: "{{ .Values.ncfspolicyupdateservice.service.port }}"
        - name: METRICS_PORT
          value: "{{ .Values.prometheus.metricsport }}"
        - name: CONFIGMAP_NAME
          value: {{ .Values.referencencfs.configmapname }}
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: ncfspolicyupdateservicesecret
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: ncfspolicyupdateservicesecret
              key: password 